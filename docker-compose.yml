version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}
  rabbitmq_data:
  rabbitmq_log:

services:
  message-broker:
    image: rabbitmq:3-management-alpine
    container_name: message-broker
    ports:
      - 5672:5672   # for sender and consumer connections
      - 15672:15672 # for serve RabbitMQ GUI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    restart: always
    networks:
      - dev-network

  mysql:
    image: mysql:5.7
    container_name: mysql-shortner-go
    restart: always
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: shortner-go
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    networks:
      - dev-network

  nginx:
    build:
        dockerfile: ./nginx.dockerfile
        context: .
    image: nginx
    container_name: container-lb
    ports:
        - "80:80"
    depends_on:
        - server
        - server-two
    volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - dev-network

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      - dev-network

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./configs/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - dev-network

  grafana:
    image: grafana/grafana
    ports:
      - 3001:3000
    networks:
      - dev-network

  server:
    build:
      context: .
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - message-broker
      - cache
      - prometheus
      - grafana
    container_name: api-one-go
    networks:
      - dev-network

  server-two:
    build:
      context: .
    ports:
      - 8081:8080
    depends_on:
      - mysql
      - message-broker
      - cache
      - prometheus
      - grafana
    container_name: api-two-go
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge